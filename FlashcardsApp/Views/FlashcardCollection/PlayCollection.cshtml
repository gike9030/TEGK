@model Flashcards

<style>
    .flashcard {
        width: 70%;
        height: 400px;
        margin: 50px auto;
        border: 1px solid #ddd;
        cursor: pointer;
        perspective: 1000px;
    }

    .card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

    .flashcard.flipped .card-inner {
        transform: rotateY(180deg);
    }

    .card-front, .card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
    }

    .card-front {
        background: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .exit-btn {
        position: absolute;
        bottom: 0px;
        right: 100px;
        background-color: #f44336;
        color: #ffffff;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
        border-radius: 25px;
        z-index: 1000;
    }

        .exit-btn:hover {
            background-color: #d32f2f;
        }

    .card-back {
        background: #eee;
        display: flex;
        justify-content: center;
        align-items: center;
        transform: rotateY(180deg);
    }

    .flashcard-container {
        position: relative;
        top: 50px;
    }

    .flashcard-navigation {
        position: absolute;
        top: 50%;
        width: 100%;
        transform: translateY(-50%);
    }

    .prev-btn, .next-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-size: 2rem;
        background-color: rgba(255,255,255,0.7);
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .prev-btn:hover, .next-btn:hover {
            background-color: rgba(255,255,255,1);
        }

    .prev-btn {
        left: 10px;
    }

    .next-btn {
        right: 10px;
    }

    #timerDisplay {
        position: absolute;
        bottom: -195px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #2196F3;
        color: #ffffff;
        padding: 10px 15px;
        border-radius: 25px;
        font-size: 1.5rem;
        z-index: 1000;
    }
</style>

<div class="flashcard-container">
        <div class="flashcard" onclick="flipCard()">
            <div class="card-inner">
                <div class="card-front">
                    @Model.Question
                </div>
                <div class="card-back">
                    @Model.Answer
                </div>
            </div>
        </div>
    <div class="flashcard-navigation">
        @if (Model.FlashcardCollection != null)
        {
            @if (ViewBag.CardIndex > 0)
            {
                <a href="@Url.Action("PlayCollection", new { id = Model.FlashcardCollectionId, cardIndex = ViewBag.CardIndex - 1 })" class="prev-btn"> &lt; </a>
            }

            @if (ViewBag.CardIndex < (Model.FlashcardCollection.Flashcards.Count - 1))
            {
                <a href="@Url.Action("PlayCollection", new { id = Model.FlashcardCollectionId, cardIndex = ViewBag.CardIndex + 1 })" class="next-btn">></a>
            }
        }
    </div>
    <button onclick="exitPlayMode()" class="exit-btn">Exit</button>
    <div id="timerDisplay">0h 0m 0s</div>
</div>

<script>
    function flipCard() {
        var card = document.querySelector(".flashcard");
        card.classList.toggle("flipped");
    }

    function exitPlayMode() {
        window.location.href = "@Url.Action("Index", "FlashcardCollection")";
    }

    var elapsedSeconds = 0;

    function startTimer() {
        elapsedSeconds = parseInt(sessionStorage.getItem("elapsedSeconds")) || 0; 

        setInterval(function () {
            elapsedSeconds++;
            var hours = Math.floor(elapsedSeconds / 3600);
            var minutes = Math.floor((elapsedSeconds % 3600) / 60);
            var seconds = elapsedSeconds % 60;
            document.getElementById("timerDisplay").innerText = hours + "h " + minutes + "m " + seconds + "s";

            sessionStorage.setItem("elapsedSeconds", elapsedSeconds.toString()); 

            if (elapsedSeconds % 10 === 0) {
                updateServerTime(hours, minutes, seconds);
            }
        }, 1000);
    }

    function exitPlayMode() {
        alert("You spent " + document.getElementById("timerDisplay").innerText + " on this collection.");
        sessionStorage.removeItem("elapsedSeconds"); 
        window.location.href = "@Url.Action("Index", "FlashcardCollection")";
    }

    function updateServerTime(hours, minutes, seconds) {
        fetch('/FlashcardCollection/UpdateElapsedTime', {
            method: 'POST',
            body: JSON.stringify({
                Hours: hours,
                Minutes: minutes,
                Seconds: seconds
            }),
            headers: {
                'Content-Type': 'application/json'
            }
        });
    }
</script>
