@using FlashcardsApp.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<FlashcardsAppUser> UserManager

@model IEnumerable<FlashcardsApp.Models.FlashcardCollection<Flashcards>>
@{
    ViewData["Title"] = "Search Results";
    var backgroundImagePath = Url.Content("~/images/ggg.jpg");
}
<div class="full-screen-image-container"></div>
@if (TempData["Error"] != null)
{
    <div class="alert alert-warning" style="background: #f7f9e6;">
        @TempData["Error"]
    </div>
}

<h1 style="text-align:center; margin-top: 10px;color: #474350;">@ViewData["Title"]</h1>

    @if (!string.IsNullOrEmpty(TempData["EmptyResults"] as string))
    {
        <div class="alert alert-warning" style="background: #f7f9e6;">
            @TempData["EmptyResults"]
        </div>
    }


@if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
{
        <div class="alert alert-warning" style="background: #f7f9e6;">
            @TempData["ErrorMessage"]
        </div>
}

<div class="collection-grid">
    @foreach (var collection in Model)
    {
        <div class="collection-card">
            <div class="dropdown">
                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v"></i>
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                    @if (collection.FlashcardsAppUserId == UserManager.GetUserId(User))
                    {
                        <a asp-controller="FlashcardCollection" asp-action="Edit" asp-route-id="@collection.Id" class="dropdown-item">Edit</a>
                        <a asp-controller="FlashcardCollection" asp-action="ViewCollection" asp-route-id="@collection.Id" class="dropdown-item">View</a>
                        <a class="dropdown-item" href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete this collection?')) { document.getElementById('deleteForm-@collection.Id').submit(); }">Delete</a>
                    }
                    <a asp-controller="FlashcardCollection" asp-action="ViewCollection" asp-route-id="@collection.Id" class="dropdown-item">View</a>
                </div>
            </div>

            <div class="card-content text-center">
                <h2>@collection.CollectionName</h2>
                <span>@collection.Category</span>
            </div>

            <form id="deleteForm-@collection.Id" asp-controller="FlashcardCollection" asp-action="Delete" asp-route-id="@collection.Id" method="post" style="display:none;"></form>
            <div class="play-button">
                <a href="@Url.Action("PlayCollection", "FlashcardCollection", new { id = collection.Id })" class="btn btn-primary">
                    <i class="fas fa-play"></i> Play
                </a>
            </div>
        </div>
    }
</div>

<div class="text-center mt-3">
    <a asp-controller="FlashcardCollection" asp-action="CreateFlashcardCollection" class="btn btn-success">Create New Collection</a>
</div>

<style>
    .btn-success {
        margin-top: 20px;
        background-color: #007bff;
        color: white;
        padding: 10px 16px;
        border: none;
        border-radius: 8px;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
        width: 50%;
    }

        .btn-success:hover {
            background-color: #0056b3;
        }
    .collection-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        align-items: flex-start;
    }

    .collection-card {
        width: 300px;
        height: 300px;
        background: #fffffb;
        border: 1px solid #ccc;
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        margin-top: 60px;
    }

        .collection-card:hover {
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
            transform: scale(1.03);
        }

        .collection-card .play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .collection-card:hover .play-button {
            opacity: 1;
        }

    .dropdown {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .btn-sm.dropdown-toggle {
        padding: 0.125rem 0.3rem;
        font-size: 0.675rem;
    }

    .card-content span {
        display: block;
        margin-top: 20px;
    }

    .full-screen-image-container {
        position: fixed;
        margin-left: -15%;
        width: 100vw;
        height: 120vh;
        overflow: hidden;
        background-image: url('@backgroundImagePath');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        z-index: -1;
    }

    .content-above-background {
        position: relative;
        z-index: 1;
    }


    .full-screen-image-container::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 10%, rgba(255, 255, 255, 0) 90%, rgba(255, 255, 255, 1) 100%);
        z-index: 2;
    }
</style>
