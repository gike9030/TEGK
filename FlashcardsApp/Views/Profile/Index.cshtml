@using FlashcardsApp.Models
@using FlashcardsApp.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<FlashcardsAppUser> UserManager
@model FlashcardsApp.Models.Profile

@{
    ViewData["Title"] = "User Profile";
}

<div class="profile-container">
    <div class="profile-header">
        <img src="@Url.Content(Model.ProfilePhoto)" alt="Profile Photo" class="profile-photo" />
        <div class="profile-photo-upload">
            <form asp-action="UploadProfilePhoto" method="post" enctype="multipart/form-data" style="display:none;" id="photo-upload-form">
                <input type="file" name="profilePhoto" accept=".jpg" />
                <button type="submit" class="upload-btn">Upload</button>
            </form>
            <button class="view-upload-btn" onclick="viewUploadForm()">View Upload</button>
        </div>
        <h1>@Model.FirstName @Model.LastName</h1>

        <h3>Bio</h3>
        <p id="description-text">@Model.Description</p>

        <form asp-action="EditDescription" method="post" style="display:none;" id="description-form">
            <textarea id="description" name="Description">@Model.Description</textarea>
            <button type="submit" class="save-btn">Save</button>
        </form>
        <button class="edit-btn" onclick="editDescription()">Edit</button>
    </div>

    <div class="flashcard-collections">
        <h2>Your Flashcard Collections</h2>
        @if (Model.FlashcardCollections != null && Model.FlashcardCollections.Any())
        {
            foreach (var collection in Model.FlashcardCollections)
            {
                @if (collection.FlashcardsAppUserId == UserManager.GetUserId(User))
                {
                    <div class="flashcard-item">
                        <div class="collection-card">
                            <div class="dropdown">
                                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a asp-controller="FlashcardCollection" asp-action="Edit" asp-route-id="@collection.Id" class="dropdown-item">Edit</a>
                                    <a asp-controller="FlashcardCollection" asp-action="ViewCollection" asp-route-id="@collection.Id" class="dropdown-item">View</a>
                                    <a class="dropdown-item" href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete this collection?')) { document.getElementById('deleteForm-@collection.Id').submit(); }">Delete</a>
                                </div>
                            </div>

                            <div class="card-content text-center">
                                <h2>@collection.CollectionName</h2>
                                <span>@collection.Category</span>
                            </div>
                            <form id="deleteForm-@collection.Id" asp-controller="FlashcardCollection" asp-action="Delete" asp-route-id="@collection.Id" method="post" style="display:none;"></form>
                            <div class="play-button">
                                <a href="@Url.Action("PlayCollection", "FlashcardCollection", new { id = collection.Id })" class="btn btn-primary">
                                    <i class="fas fa-play"></i> Play
                                </a>
                            </div>
                        </div>
                    </div>
                }

            }
            <form asp-controller="FlashcardCollection" asp-action="CreateFlashcardCollection" method="post">
                <button class="add-collection-btn">
                    Add New Collection
                </button>
            </form>

        }
        else
        {
            <p>No flashcard collections available.</p>
        }
    </div>
</div>

<script>
    function editDescription() {
        var descriptionText = document.getElementById('description-text');
        var descriptionForm = document.getElementById('description-form');
        descriptionText.style.display = 'none';
        descriptionForm.style.display = 'block';
    }
    function viewUploadForm() {
        var uploadForm = document.getElementById('photo-upload-form');
        uploadForm.style.display = 'block';
    }
    function setReturnUrl(returnUrl) {
        $.ajax({
            url: '@Url.Action("SetReturnUrl", "FlashcardCollectionController")',
            type: 'GET',
            data: { returnUrl: returnUrl }
        });
    }

</script>

<style>
    .add-collection-btn {
        background-color: #28a745; 
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        margin-top: 10px; 
        cursor: pointer;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

        .add-collection-btn:hover {
            background-color: #218838;
        }
    .profile-photo-upload {
        margin-top: 20px;
        text-align: center;
    }
    .profile-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        max-width: 1200px; 
        margin: 20px auto; 
    }

    .profile-header {
        text-align: center;
        width: 100%;
    }

    .profile-photo {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        margin-bottom: 20px;
    }

    .flashcard-collections {
        width: 100%;
        padding: 0 15px; 
    }

    .flashcard-item {
        box-sizing: border-box;
        padding: 10px;
        width: 30%;
        margin: 10px;
        display: inline-block; 
    }

    .collection-card {
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        padding: 10px;
        width: 100%; 
        height: 300px; 
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .collection-card:hover {
            box-shadow: 0 8px 15px rgba(0,0,0,0.3);
            transform: scale(1.03);
        }

        .collection-card .play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .collection-card:hover .play-button {
            opacity: 1;
        }

    .dropdown {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .btn-sm.dropdown-toggle {
        padding: 0.125rem 0.3rem;
        font-size: 0.675rem;
    }

    .card-content span {
        display: block;
        margin-top: 20px;
    }

    #description-form textarea {
        width: 60%; 
        min-height: 100px;
        padding: 10px; 
        border: 1px solid #ADD8E6;
        border-radius: 5px; 
        font-size: 1rem; 
        margin-bottom: 10px; 
    }
    .view-upload-btn, .edit-btn {
    background-color: #ADD8E6;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    transition-duration: 0.4s;
    cursor: pointer;
}

.view-upload-btn:hover, .edit-btn:hover {
    background-color: #87CEEB;
    color: black;
}

</style>