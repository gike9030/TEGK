@using FlashcardsApp.Services;
@using Microsoft.AspNetCore.Identity
@using FlashcardsApp.Areas.Identity.Data
@using FlashcardsApp.Extension

@inject SignInManager<FlashcardsAppUser> SignInManager
@inject UserManager<FlashcardsAppUser> UserManager
@inject IHttpContextAccessor ContextAccessor

@{
    bool logedIn = ContextAccessor.HttpContext.Request.Cookies["id"] != null && ContextAccessor.HttpContext.Request.Cookies["token"] != null ? true : false;
    
    // Uri baseAddress = new("https://localhost:7296/api");
    // HttpClient httpClient = new HttpClient { BaseAddress = baseAddress };

    // var httpContext = ContextAccessor.HttpContext;
    // if (httpContext == null || httpContext.Request.Cookies["id"] == null || httpContext.Request.Cookies["token"] == null)
    // {

    // }
    // Response name = HttpApiService.GetFromAPI<Response>(httpClient, "/FlashcardsAppUser/GetFirstName/" + httpContext.Request.Cookies["id"], token: httpContext.Request.Cookies["token"]);

    // if (name == null)
    // {
    //     logedIn = false;
    // }

    // logedIn = true;
}

<ul class="navbar-nav">
@if (logedIn)
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
     </li>
}
</ul>
